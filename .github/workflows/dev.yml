name: Django Dev CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_SETTINGS_MODULE: klimaosveta.settings

      # üîê Tajn√© promƒõnn√© ze secrets
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      MEDIA_ROOT: ${{ secrets.MEDIA_ROOT }}
      STATIC_ROOT: ${{ secrets.STATIC_ROOT }}
      EXTRA_STATIC: ${{ secrets.EXTRA_STATIC }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      SITE_URL: ${{ secrets.SITE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create extra_static dir if missing
        run: mkdir -p "$EXTRA_STATIC"

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h "$DATABASE_HOST" -p "$DATABASE_PORT" -U "$DATABASE_USER"; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run migrations
        run: python manage.py migrate

      - name: Collect static files
        run: python manage.py collectstatic --noinput

      - name: Run Django checks
        run: python manage.py check --deploy --fail-level WARNING

      - name: Run tests
        run: python manage.py test
